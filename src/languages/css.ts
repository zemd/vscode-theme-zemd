import { scope } from "../utils.js";

export default (tokens: Record<string, any>) => {
  return [
    scope(
      [
        "entity.other.attribute-name.class.css",
        "punctuation.definition.entity.css",
        "entity.other.attribute-name.id.css",
        "variable.scss",
        "meta.property-value.scss",
        "variable.parameter.screen.tailwind",
        "variable.parameter.tailwind.tailwind",
      ],
      tokens.syntax.variable.fg,
    ),
    scope("entity.other.attribute-name.id.css", "", "underline"),
    scope("support.type.property-name.css", tokens.syntax.property.fg),
    scope(
      [
        "string.quoted.single.css",
        "punctuation.definition.string.begin.css",
        "punctuation.definition.string.end.css",
        "string.quoted.double.css",
      ],
      tokens.syntax.string.fg,
    ),
    scope(
      [
        "entity.name.tag.css",
        "entity.name.tag.wildcard.css",
        "punctuation.definition.keyword.css",
        // "keyword.control.at-rule.media.css",
        // "keyword.control.at-rule.import.css",
        // "keyword.control.at-rule.keyframes.css",
        "punctuation.definition.keyword.scss",
        // "keyword.control.at-rule.media.scss",
        // "keyword.control.at-rule.keyframes.scss",
        "entity.other.attribute-name.scss",
        "meta.at-rule.keyframes.scss",
        // "keyword.control.at-rule.screen",
        // "keyword.control.at-rule.tailwind.tailwind",
        // "keyword.control.at-rule.apply.tailwind",
        // "keyword.control.at-rule.layer",
        "keyword.control.at-rule",
      ],
      tokens.syntax.keyword.fg,
    ),
    scope("constant.other.color.rgb-value.hex.css", tokens.syntax.fg),
    scope("support.constant.vendored.property-value.css", tokens.syntax.typeParameter.fg),
    scope("meta.at-rule.media.header.css", tokens.syntax.parameter.fg, "italic"),

    scope(
      [
        "punctuation.section.property-list.begin.bracket.curly.css",
        "punctuation.section.property-list.end.bracket.curly.css",
        "punctuation.definition.entity.begin.bracket.square.css",
        "punctuation.definition.entity.end.bracket.square.css",
        "punctuation.section.function.begin.bracket.round.css",
        "punctuation.section.function.end.bracket.round.css",
        "punctuation.separator.list.comma.css",
        "punctuation.section.keyframes.begin.bracket.curly.css",
        "punctuation.section.keyframes.end.bracket.curly.css",
        "punctuation.section.media.end.bracket.curly.css",
        "punctuation.section.media.begin.bracket.curly.css",
        "punctuation.section.property-list.end.bracket.curly.scss",
        "punctuation.section.property-list.begin.bracket.curly.scss",
        "punctuation.terminator.rule.scss",
        "punctuation.definition.media-query.begin.bracket.round.scss",
        "punctuation.definition.media-query.end.bracket.round.scss",
        "punctuation.section.function.scss",
        "punctuation.section.keyframes.begin.scss",
        "punctuation.section.keyframes.end.scss",
        "punctuation.section.layer.begin.bracket.curly",
        "punctuation.section.layer.end.bracket.curly",
        "punctuation.terminator.tailwind.tailwind",
      ],
      tokens.syntax.punctuation.fg,
    ),
    scope("constant.numeric.css", tokens.syntax.number.fg, "underline"),
    scope(["punctuation.definition.comment.begin.css", "comment.block.css"], tokens.syntax.comment.fg, "italic"),
    scope(
      [
        "support.function.misc.css",
        "support.function.url.css",
        "support.function.transform.css",
        "support.function.timing-function.css",
        "support.function.calc.css",
        "support.function.gradient.css",
        "support.function.misc.scss",
      ],
      tokens.syntax.function.fg,
    ),
    scope("support.constant.property-value.css", tokens.syntax.keyword.fg),
    scope(["meta.property-name.css", "support.type.property-name.media.css"], tokens.syntax.parameter.fg, "italic"),
    scope("support.type.vendored.property-name.css", tokens.syntax.number.fg),
    scope("support.constant.font-name.css", tokens.syntax.keyword.fg),
    scope(["punctuation.separator.key-value.css", "punctuation.terminator.rule.css"], tokens.syntax.punctuation.fg),
    scope("punctuation.separator.key-value.html", tokens.syntax.operator.fg),
    scope("keyword.other.important.css", tokens.syntax.macro.fg),
    scope(
      ["entity.other.keyframe-offset.percentage.css", "entity.other.keyframe-offset.css"],
      tokens.syntax.parameter.fg,
    ),
    scope("meta.property-value.css", tokens.syntax.variable.fg),
    scope("variable.css", tokens.syntax.variable.fg),
    scope(
      ["meta.selector.css", "variable.argument.css", "variable.parameter.layer"],
      tokens.syntax.parameter.fg,
      "italic",
    ),
  ];
};
